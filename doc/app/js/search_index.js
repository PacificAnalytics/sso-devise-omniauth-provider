var search_data = {"index":{"searchIndex":["accessgrant","applicationcontroller","applicationhelper","authcontroller","authentication","authenticationscontroller","client","confirmationscontroller","oauthhelper","omniauth","strategies","ldap","registrationscontroller","sessionscontroller","user","emailcollision","users","omniauthcallbackscontroller","userscontroller","access_token()","add()","after_inactive_sign_up_path_for()","after_update_path_for()","application()","apply_omniauth()","authenticate()","authenticate()","authenticate()","authorize()","build_resource()","create()","create()","create()","destroy()","do_sign_in()","fail!()","failure()","failure()","find_for_token_authentication()","generate_tokens()","google()","google_oauth2()","index()","initialize_fields()","isalive()","ldap()","ldap_sign_in()","link()","new()","new()","new()","prune!()","redirect_uri_for()","request_phase()","save_auth_provider()","start_expiry_period!()","user()","readme_for_app"],"longSearchIndex":["accessgrant","applicationcontroller","applicationhelper","authcontroller","authentication","authenticationscontroller","client","confirmationscontroller","oauthhelper","omniauth","omniauth::strategies","omniauth::strategies::ldap","registrationscontroller","sessionscontroller","user","user::emailcollision","users","users::omniauthcallbackscontroller","userscontroller","authcontroller#access_token()","authenticationscontroller#add()","registrationscontroller#after_inactive_sign_up_path_for()","registrationscontroller#after_update_path_for()","authcontroller#application()","user#apply_omniauth()","accessgrant::authenticate()","client::authenticate()","user::authenticate()","authcontroller#authorize()","registrationscontroller#build_resource()","authenticationscontroller#create()","registrationscontroller#create()","sessionscontroller#create()","authenticationscontroller#destroy()","users::omniauthcallbackscontroller#do_sign_in()","omniauth::strategies::ldap#fail!()","authcontroller#failure()","authenticationscontroller#failure()","user::find_for_token_authentication()","accessgrant#generate_tokens()","users::omniauthcallbackscontroller#google()","users::omniauthcallbackscontroller#google_oauth2()","authenticationscontroller#index()","user#initialize_fields()","authcontroller#isalive()","users::omniauthcallbackscontroller#ldap()","userscontroller#ldap_sign_in()","authenticationscontroller#link()","authenticationscontroller#new()","registrationscontroller#new()","sessionscontroller#new()","accessgrant::prune!()","accessgrant#redirect_uri_for()","omniauth::strategies::ldap#request_phase()","authcontroller#save_auth_provider()","accessgrant#start_expiry_period!()","authcontroller#user()",""],"info":[["AccessGrant","","AccessGrant.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AuthController","","AuthController.html","",""],["Authentication","","Authentication.html","",""],["AuthenticationsController","","AuthenticationsController.html","",""],["Client","","Client.html","",""],["ConfirmationsController","","ConfirmationsController.html","",""],["OauthHelper","","OauthHelper.html","",""],["OmniAuth","","OmniAuth.html","",""],["OmniAuth::Strategies","","OmniAuth/Strategies.html","",""],["OmniAuth::Strategies::LDAP","","OmniAuth/Strategies/LDAP.html","",""],["RegistrationsController","","RegistrationsController.html","",""],["SessionsController","","SessionsController.html","",""],["User","","User.html","",""],["User::EmailCollision","","User/EmailCollision.html","",""],["Users","","Users.html","",""],["Users::OmniauthCallbacksController","","Users/OmniauthCallbacksController.html","",""],["UsersController","","UsersController.html","",""],["access_token","AuthController","AuthController.html#method-i-access_token","()",""],["add","AuthenticationsController","AuthenticationsController.html#method-i-add","()",""],["after_inactive_sign_up_path_for","RegistrationsController","RegistrationsController.html#method-i-after_inactive_sign_up_path_for","(resource)",""],["after_update_path_for","RegistrationsController","RegistrationsController.html#method-i-after_update_path_for","(scope)",""],["application","AuthController","AuthController.html#method-i-application","()",""],["apply_omniauth","User","User.html#method-i-apply_omniauth","(omniauth)",""],["authenticate","AccessGrant","AccessGrant.html#method-c-authenticate","(code, application_id)",""],["authenticate","Client","Client.html#method-c-authenticate","(app_id, app_secret)",""],["authenticate","User","User.html#method-c-authenticate","(provider, email, uid, signed_in_resource=nil, username: nil)",""],["authorize","AuthController","AuthController.html#method-i-authorize","()",""],["build_resource","RegistrationsController","RegistrationsController.html#method-i-build_resource","(*args)",""],["create","AuthenticationsController","AuthenticationsController.html#method-i-create","()","<p>TODO: Account linking. Example, if a user has signed in via twitter using\nthe email abc@xyz.com and then …\n"],["create","RegistrationsController","RegistrationsController.html#method-i-create","()",""],["create","SessionsController","SessionsController.html#method-i-create","()",""],["destroy","AuthenticationsController","AuthenticationsController.html#method-i-destroy","()",""],["do_sign_in","Users::OmniauthCallbacksController","Users/OmniauthCallbacksController.html#method-i-do_sign_in","(kind=\"Google\")",""],["fail!","OmniAuth::Strategies::LDAP","OmniAuth/Strategies/LDAP.html#method-i-fail-21","(message_key, exception = nil)",""],["failure","AuthController","AuthController.html#method-i-failure","()",""],["failure","AuthenticationsController","AuthenticationsController.html#method-i-failure","()",""],["find_for_token_authentication","User","User.html#method-c-find_for_token_authentication","(conditions)",""],["generate_tokens","AccessGrant","AccessGrant.html#method-i-generate_tokens","()",""],["google","Users::OmniauthCallbacksController","Users/OmniauthCallbacksController.html#method-i-google","()",""],["google_oauth2","Users::OmniauthCallbacksController","Users/OmniauthCallbacksController.html#method-i-google_oauth2","()",""],["index","AuthenticationsController","AuthenticationsController.html#method-i-index","()",""],["initialize_fields","User","User.html#method-i-initialize_fields","()",""],["isalive","AuthController","AuthController.html#method-i-isalive","()","<p>Incase, we need to check timeout of the session from a different\napplication! This will be called ONLY …\n"],["ldap","Users::OmniauthCallbacksController","Users/OmniauthCallbacksController.html#method-i-ldap","()",""],["ldap_sign_in","UsersController","UsersController.html#method-i-ldap_sign_in","()",""],["link","AuthenticationsController","AuthenticationsController.html#method-i-link","()",""],["new","AuthenticationsController","AuthenticationsController.html#method-i-new","()",""],["new","RegistrationsController","RegistrationsController.html#method-i-new","()",""],["new","SessionsController","SessionsController.html#method-i-new","()",""],["prune!","AccessGrant","AccessGrant.html#method-c-prune-21","()",""],["redirect_uri_for","AccessGrant","AccessGrant.html#method-i-redirect_uri_for","(redirect_uri,state)",""],["request_phase","OmniAuth::Strategies::LDAP","OmniAuth/Strategies/LDAP.html#method-i-request_phase","()",""],["save_auth_provider","AuthController","AuthController.html#method-i-save_auth_provider","()",""],["start_expiry_period!","AccessGrant","AccessGrant.html#method-i-start_expiry_period-21","()","<p>Note: This is currently configured through devise, and matches the\nAuthController access token life\n"],["user","AuthController","AuthController.html#method-i-user","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}